/********************************************************************** 

Filename	:	Civ4Theme_ScrollPanel.thm
Content		:	Civ4 - GScrollPanel control theme
Created		:	May 1, 2005
Authors		:	Sven Dixon

Copyright	:	(c) 2005 Scaleform Corp. All Rights Reserved.

Licensees may use this file in accordance with the valid Scaleform
GFC Commercial License Agreement provided with the software.

This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING 
THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR ANY PURPOSE.

For information regarding GFC Commercial License Agreements go to:
	online - http://www.scaleform.com/licensing.html or
	email  - sales@scaleform.com 

**********************************************************************/

// *** Main ScrollPanel control namespace 

with GFC_Control_ScrollPanel
{

	GFC_Control_DefaultScrollPanel_Style
	{												
		GFC_Control_Renderer_Control					=	GFC_CtrlTheme_Bitmap_Control_ScrollPanel_Renderer_Control;
															
		GFC_Control_Update_ChildLayout					=	GFC_CtrlTheme_Bitmap_Control_ScrollPanel_Update_ChildLayout;
															
		with .Child											
		{												
			.ScrollFrame								=	GFC_CtrlTheme_Bitmap_Control_ScrollPanel_Child_ScrollFrame;
		}									
												
		with .StyleId							
		{									
			.ScrollFrame								=	GPropertyId(GFC_Control_StandardScrollFrame_Style);
		}											
														
		with GFC_Control_Flag
		{											
			// Base control flags						
			.Transparent								=	GFlags(GCtrl, GFC_CF_TRANSPARENT);
			.SolidInner									=	0;	//GFlags(GCtrl, GFC_CF_SOLIDINNER);
			.SolidBackground							=	0;	//GFlags(GCtrl, GFC_CF_SOLIDBACKGROUND);
			.RegionClip									=	0;	//GFlags(GCtrl, GFC_CF_REGIONCLIP);
			.RegionClipParent							=	0;	//GFlags(GCtrl, GFC_CF_REGIONCLIP_PARENT);
			.NoExternalWindow							=	0;	//GFlags(GCtrl, GFC_CF_NOEXTERNALWINDOW);
			.HitTest									=	GFlags(GCtrl, GFC_CF_HITTEST);
			.TopLayer									=	0;	//GFlags(GCtrl, GFC_CF_TOPLAYER);
			.TopLayerBitmap								=	0;	//GFlags(GCtrl, GFC_CF_TOPLAYERBITMAP);
			.BottomLayerBitmap							=	0;	//GFlags(GCtrl, GFC_CF_BOTTOMLAYERBITMAP);
														
			// Control flag change masks				
			.Mask_InvalidateControl						=	GFlags(GCtrl, GFC_CF_DISABLED, GFC_CF_TRANSPARENT, GFC_CF_TOPLAYER);
		}

		with .Flag										
		{														
			// ScrollPanel flags						
			.NoInnerFill								=	GFlags(GScrollPanelCtrl, GFC_CF_SCROLLPANEL_NOINNERFILL);
												
			// ScrollPanel flag change masks		
			//.ScrollPanelMask_InvalidateControl		=	GFlags(GScrollPanelCtrl);
		}

		with .Color
		{
			.Inner					=	GFC_Control_Color_Surface;
		}
				
		with .Combine
		{
			.Inner					=	GFC_Control_Combine_Surface;
		}						
	
		// ******* Initialize all the Bitmap theme ScrollPanel properties to avoid inheritance problems
/*		
		with GFC_CtrlTheme_Bitmap_Control_ScrollPanel_Skin
		{
			.Inner_Default						=	0;
			.Inner_Rollover						=	0;
			.Inner_Press						=	0;
			.Inner_Disable						=	0;
			.Inner_Winoff						=	0;
			.Inner_WinoffRollover				=	0;
			.Inner_WinoffPress					=	0;
			.Inner_WinoffDisable				=	0;
		}
*/

		map GFC_Control			=	GFC_Control_DefaultControl_Style;
	}	// end GFC_Control_DefaultScrollPanel_Style



	// ** Normal ScrollPanel bar style

	GFC_Control_StandardScrollPanel_Style
	{

		map GFC_CtrlTheme_Bitmap_Control_ScrollPanel		=	GFC_Control_DefaultScrollPanel_Style;
		map GFC_Control									=	GFC_Control_DefaultScrollPanel_Style;
	}

}




// *** Main ScrollFrame control namespace

with GFC_Control_ScrollFrame
{

	GFC_Control_DefaultScrollFrame_Style
	{												
		GFC_Control_Renderer_Control					=	GFC_CtrlTheme_Bitmap_Control_ScrollFrame_Renderer_Control;
															
		GFC_Control_Update_ChildLayout					=	GFC_CtrlTheme_Bitmap_Control_ScrollFrame_Update_ChildLayout;
															
		with .Child											
		{												
			.Table										=	GFC_CtrlTheme_Bitmap_Control_ScrollFrame_Child_Table;
		}									
												
		with .StyleId							
		{									
			.Table										=	GPropertyId(GFC_Control_StandardTable_Style);
		}											
														
		with GFC_Control_Flag										
		{											
			// Base control flags						
			.Transparent								=	GFlags(GCtrl, GFC_CF_TRANSPARENT);
			.SolidInner									=	0;	//GFlags(GCtrl, GFC_CF_SOLIDINNER);
			.SolidBackground							=	0;	//GFlags(GCtrl, GFC_CF_SOLIDBACKGROUND);
			.RegionClip									=	0;	//GFlags(GCtrl, GFC_CF_REGIONCLIP);
			.RegionClipParent							=	0;	//GFlags(GCtrl, GFC_CF_REGIONCLIP_PARENT);
			.NoExternalWindow							=	0;	//GFlags(GCtrl, GFC_CF_NOEXTERNALWINDOW);
			.HitTest									=	0;	//GFlags(GCtrl, GFC_CF_HITTEST);
			.TopLayer									=	0;	//GFlags(GCtrl, GFC_CF_TOPLAYER);
			.TopLayerBitmap								=	0;	//GFlags(GCtrl, GFC_CF_TOPLAYERBITMAP);
			.BottomLayerBitmap							=	0;	//GFlags(GCtrl, GFC_CF_BOTTOMLAYERBITMAP);
														
			// Control flag change masks				
			.Mask_InvalidateControl						=	GFlags(GCtrl, GFC_CF_DISABLED, GFC_CF_TRANSPARENT, GFC_CF_TOPLAYER);
		}

		with .Flag										
		{														
			// ScrollPanel flags						
			.NoBorder									=	GFlags(GScrollFrameCtrl, GFC_CF_SCROLLFRAME_NOBORDER);
												
			// ScrollFrame flag change masks		
			//.ScrollFrameMask_InvalidateControl		=	GFlags(GScrollFrameCtrl);
		}

		map GFC_Control			=	GFC_Control_DefaultControl_Style;
	}	// end GFC_Control_DefaultScrollFrame_Style


style SF_CtrlTheme_Civ4_Control_ScrollFrame_Standard_Table_Style
{											
	GFC_Control_Table_StyleId_OuterBorder		=	GPropertyId(GFC_Control_EmptyBorder_Style);
	GFC_Control_Table_StyleId_InnerBorder		=	GPropertyId(GFC_Control_EmptyBorder_Style);
	GFC_Control_Table_StyleId_HScroll			=	GPropertyId(GFC_Control_StandardScroll_Style);
	GFC_Control_Table_StyleId_VScroll			=	GPropertyId(GFC_Control_StandardScroll_Style);
	GFC_Control_Table_StyleId_LTCorner			=	GPropertyId(GFC_Control_EmptyPanel_Style);
	GFC_Control_Table_StyleId_RTCorner			=	GPropertyId(GFC_Control_EmptyPanel_Style);
	GFC_Control_Table_StyleId_LBCorner			=	GPropertyId(GFC_Control_EmptyPanel_Style);
	GFC_Control_Table_StyleId_RBCorner			=	GPropertyId(GFC_Control_EmptyPanel_Style);

	GFC_Control_Table_Flag_NoInnerBorder		=	GFlags(GTableCtrl, GFC_CF_TABLE_NOINNERBORDER);

	map SF_CtrlTheme_Civ4_Control				=	GFC_Control_StandardTable_Style;
	map GFC_CtrlTheme_Bitmap_Control_Table		=	GFC_Control_StandardTable_Style;
	map GFC_Control								=	GFC_Control_StandardTable_Style;
}


	// ** Normal ScrollPanel bar style

	GFC_Control_StandardScrollFrame_Style
	{
		.StyleId_Table										=	GPropertyId(SF_CtrlTheme_Civ4_Control_ScrollFrame_Standard_Table_Style);
	
		map GFC_CtrlTheme_Bitmap_Control_ScrollFrame		=	GFC_Control_DefaultScrollFrame_Style;
		map GFC_Control									=	GFC_Control_DefaultScrollFrame_Style;
	}

}

